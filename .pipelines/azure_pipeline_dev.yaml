# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- ci_dev

pool:
  name: Azure-Pipelines-CI-Test-EO

variables:
  armServiceConnectionName: 'ci-1es-acr-connection'
  subscription: '9b96ebbd-c57a-42d1-bbe9-b69296e4c7fb'
  containerRegistry: 'containerinsightsprod'
  repoImageName: '${{ variables.containerRegistry }}.azurecr.io/public/azuremonitor/containerinsights/cidev'

steps:
- bash: |
    commit=$(git rev-parse --short HEAD)
    echo "##vso[task.setvariable variable=commit;]$commit"

    datetime=$(date +'%Y%m%d%s')
    echo "##vso[task.setvariable variable=datetime;]$datetime"

- task: AzureCLI@2
  inputs:
    azureSubscription: ${{ variables.armServiceConnectionName }}
    scriptType: bash
    scriptLocation: inlineScript
    inlineScript: |

      sudo apt-get update && sudo apt-get -y install qemu binfmt-support qemu-user-static
      docker run --rm --privileged multiarch/qemu-user-static --reset -p yes

      docker buildx create --name testbuilder
      docker buildx use testbuilder

      az --version
      az account show
      az account set -s ${{ variables.subscription }}
      az acr login -n ${{ variables.containerRegistry }}

      docker buildx build --platform linux/amd64,linux/arm64 --tag ${{ variables.repoImageName }}:$(datetime)-$(commit) -f kubernetes/linux/Dockerfile.multiarch --metadata-file $(Build.ArtifactsDirectory)/metadata.json --push .

- task: AzureArtifacts.manifest-generator-task.manifest-generator-task.ManifestGeneratorTask@0
  displayName: 'Generation Task'
  inputs:
       BuildDropPath: '$(System.ArtifactsDirectory)'

- task: PublishBuildArtifacts@1
  inputs:
    pathToPublish: '$(Build.ArtifactsDirectory)'
    artifactName: drop
