  # Fluentd config file for OMS Docker - container components (non kubeAPI)

  # Forward port 25225 for container logs
  <source>
    @type forward
    port 25225
    bind 127.0.0.1
  </source>
  
  # MDM metrics from telegraf
  <source>
    @type tcp
    tag oms.mdm.container.perf.telegraf.*
    bind 0.0.0.0
    port 25228
    format json
  </source>

  # Container inventory
  <source>
    @type containerinventory
    tag oneagent.containerinsights.CONTAINER_INVENTORY_BLOB
    run_interval 60
    @log_level debug
  </source>

  #cadvisor perf
  <source>
    @type cadvisor_perf
    tag oneagent.containerInsights.LINUX_PERF_BLOB
    run_interval 60
    @log_level debug
  </source>

  <filter kubehealth.DaemonSet.Node**>
   @type cadvisor_health_node
   @log_level debug
  </filter> 

  <filter kubehealth.DaemonSet.Container**>
   @type cadvisor_health_container
   @log_level debug
  </filter>

  #custom_metrics_mdm filter plugin
  <filter mdm.cadvisorperf**>
    @type cadvisor2mdm
    metrics_to_collect cpuUsageNanoCores,memoryWorkingSetBytes,memoryRssBytes,pvUsedBytes
    @log_level info
  </filter>

  <filter oms.mdm.container.perf.telegraf**>
   @type telegraf2mdm
   @log_level debug
  </filter>

  #containerinventory   
  <match *CONTAINER_INVENTORY_BLOB*>
   @type forward
   @log_level debug
   <server>
    host 0.0.0.0
    port "#{ENV['MDSD_FLUENT_SOCKET_PORT']}"
   </server>
   keepalive true   
   heartbeat_type none 
  </match>  

  #cadvisorperf   
  <match *LINUX_PERF_BLOB*>
    @type forward
    @log_level debug
    <server>
      host 0.0.0.0
      port "#{ENV['MDSD_FLUENT_SOCKET_PORT']}"
    </server>
    keepalive true   
    heartbeat_type none 
  </match>

  # <match kubehealth.DaemonSet**>
  #   @type health_forward
  #   send_timeout 60s
  #   recover_wait 10s
  #   hard_timeout 60s
  #   heartbeat_type tcp
  #   skip_network_error_at_init true
  #   expire_dns_cache 600s
  #   <buffer>
  #     @type file
  #     overflow_action drop_oldest_chunk
  #     path %STATE_DIR_WS%/out_health_forward*.buffer
  #     chunk_limit_size 3m
  #     flush_interval 20s
  #     retry_max_times 10   
  #     retry_max_interval 5m  
  #     retry_wait 5s
  #   </buffer>           
  #   <server>
  #     host "#{ENV['HEALTHMODEL_REPLICASET_SERVICE_SERVICE_HOST']}"
  #     port "#{ENV['HEALTHMODEL_REPLICASET_SERVICE_SERVICE_PORT']}"
  #   </server>
  #   <secondary>
  #     @type file
  #     path %STATE_DIR_WS%/fluent_forward_failed.buffer
  #   </secondary>
  # </match>

  # <match mdm.cadvisorperf** oms.mdm.container.perf.telegraf**>
  #   @type mdm
  #   @log_level debug
  #   num_threads 5
  #   <buffer>
  #     @type file
  #     path %STATE_DIR_WS%/out_mdm_cdvisorperf*.buffer
  #     overflow_action drop_oldest_chunk
  #     chunk_limit 4m
  #     flush_interval 20s
  #     retry_max_times 10
  #     retry_wait 5s
  #     retry_max_interval 5m   
  #   <buffer>
  #   retry_mdm_post_wait_minutes 30
  # </match>

  #InsightsMetrics
  <match *INSIGHTS_METRICS_BLOB*>
    @type forward
    @log_level debug
    <server>
     host 0.0.0.0
     port  "#{ENV['MDSD_FLUENT_SOCKET_PORT']}"
    </server>
    keepalive true
    heartbeat_type none
  </match>
    