{{- if and (ne .Values.ama-logs.secret.key "<your_workspace_key>") (ne .Values.ama-logs.secret.wsid "<your_workspace_id>") (or (ne .Values.ama-logs.env.clusterName "<your_cluster_name>") (ne .Values.ama-logs.env.clusterId "<your_cluster_id>") (ne .Values.Azure.Cluster.ResourceId "<your_cluster_id>") )}}
apiVersion: apps/v1
kind: DaemonSet
metadata:
 name: ama-logs
 namespace: kube-system
 labels:
   chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
   release: {{ .Release.Name }}
   heritage: {{ .Release.Service }}
   component: ama-logs-agent
   tier: node
spec:
 updateStrategy:
  type: RollingUpdate
 selector:
   matchLabels:
     dsName: "ama-logs-ds"
 template:
  metadata:
   labels:
    dsName: "ama-logs-ds"
   annotations:
    agentVersion: {{ .Values.ama-logs.image.agentVersion }}
    dockerProviderVersion: {{ .Values.ama-logs.image.dockerProviderVersion }}
    schema-versions: "v1"
    checksum/secret: {{ include (print $.Template.BasePath "/ama-logs-secret.yaml") . | sha256sum }}
    checksum/config: {{ toYaml .Values.ama-logs.resources | sha256sum }}
    checksum/logsettings: {{ toYaml .Values.ama-logs.logsettings | sha256sum }}
  spec:
   priorityClassName: ama-logs
   dnsConfig:
     options:
       - name: ndots
         value: "3"
   {{- if .Values.ama-logs.rbac }}
   serviceAccountName: ama-logs
   {{- end }}
   containers:
{{- if and (ne .Values.Azure.Cluster.ResourceId "<your_cluster_id>") (.Values.ama-logs.useAADAuth) }}
     - name: addon-token-adapter
       imagePullPolicy: IfNotPresent
       env:
       - name: AZMON_COLLECT_ENV
         value: "false"
       - name: TOKEN_NAMESPACE
         value: "azure-arc"
{{-  .Values.Azure.Identity.MSIAdapterYaml | nindent 7 }}
{{- end }}
     - name: ama-logs
       {{- if eq (.Values.ama-logs.domain | lower) "opinsights.azure.cn" }}
       image: "mcr.azk8s.cn/azuremonitor/containerinsights/ciprod:{{ .Values.ama-logs.image.tag }}"
       {{- else }}
       image: {{ printf "%s:%s" .Values.ama-logs.image.repo .Values.ama-logs.image.tag }}
       {{- end }}
       imagePullPolicy: IfNotPresent
       resources:
{{ toYaml .Values.ama-logs.resources.daemonsetlinux | indent 9 }}
       env:
       {{- if ne .Values.ama-logs.env.clusterId "<your_cluster_id>" }}
       - name: AKS_RESOURCE_ID
         value: {{ .Values.ama-logs.env.clusterId | quote }}
       {{- if ne .Values.ama-logs.env.clusterRegion "<your_cluster_region>" }}
       - name: AKS_REGION
         value: {{ .Values.ama-logs.env.clusterRegion | quote }}
       {{- end }}
       {{- else if ne .Values.Azure.Cluster.ResourceId "<your_cluster_id>" }}
       - name: AKS_RESOURCE_ID
         value: {{ .Values.Azure.Cluster.ResourceId | quote }}
       - name: USING_AAD_MSI_AUTH
         value: {{ .Values.ama-logs.useAADAuth | quote }}
       {{- if ne .Values.Azure.Cluster.Region "<your_cluster_region>" }}
       - name: AKS_REGION
         value: {{ .Values.Azure.Cluster.Region | quote }}
       {{- end }}
       {{- else }}
       - name: ACS_RESOURCE_NAME
         value: {{ .Values.ama-logs.env.clusterName | quote }}
       {{- end }}
       - name: CONTROLLER_TYPE
         value: "DaemonSet"
       - name: NODE_IP
         valueFrom:
            fieldRef:
              fieldPath: status.hostIP
       {{- if not (empty .Values.Azure.Extension.Name) }}
       - name: ARC_K8S_EXTENSION_NAME
         value: {{ .Values.Azure.Extension.Name | quote }}
       {{- end }}
       - name: USER_ASSIGNED_IDENTITY_CLIENT_ID
         value: ""
       {{- if .Values.ama-logs.logsettings.logflushintervalsecs }}
       - name: FBIT_SERVICE_FLUSH_INTERVAL
         value: {{ .Values.ama-logs.logsettings.logflushintervalsecs | quote }}
       {{- end }}
       {{- if .Values.ama-logs.logsettings.tailbufchunksizemegabytes }}
       - name: FBIT_TAIL_BUFFER_CHUNK_SIZE
         value: {{ .Values.ama-logs.logsettings.tailbufchunksizemegabytes | quote }}
       {{- end }}
       {{- if .Values.ama-logs.logsettings.tailbufmaxsizemegabytes }}
       - name: FBIT_TAIL_BUFFER_MAX_SIZE
         value: {{ .Values.ama-logs.logsettings.tailbufmaxsizemegabytes | quote }}
       {{- end }}
       - name: ISTEST
         value: {{ .Values.ama-logs.ISTEST | quote }}
       {{ if .Values.ama-logs.isArcACluster }}
       - name: IS_ARCA_CLUSTER
         value: {{ .Values.ama-logs.isArcACluster | quote }}
       {{- end }}
       {{- if ne .Values.ama-logs.metricsEndpoint "<your_metrics_endpoint>" }}
       - name: CUSTOM_METRICS_ENDPOINT
         value: {{ .Values.ama-logs.metricsEndpoint | quote }}
       {{- end }}
       securityContext:
         privileged: true
       ports:
       - containerPort: 25225
         protocol: TCP
       - containerPort: 25224
         protocol: UDP
       volumeMounts:
        - mountPath: /hostfs
          name: host-root
          readOnly: true
        - mountPath: /var/run/host
          name: docker-sock
        - mountPath: /var/log
          name: host-log
        - mountPath: /var/lib/docker/containers
          name: containerlog-path
        - mountPath: /etc/kubernetes/host
          name: azure-json-path
        - mountPath: /etc/ama-logs-secret
          name: ama-logs-secret
          readOnly: true
        {{- if and (.Values.Azure.proxySettings.isProxyEnabled) (.Values.Azure.proxySettings.proxyCert) }}
        - mountPath: /etc/ssl/certs/proxy-cert.crt
          subPath: PROXYCERT.crt
          name: ama-logs-secret
          readOnly: true
        {{- end }}
        - mountPath: /etc/config/settings
          name: settings-vol-config
          readOnly: true
        {{- if .Values.ama-logs.logsettings.custommountpath }}
        - mountPath: {{ .Values.ama-logs.logsettings.custommountpath }}
          name: custom-mount-path
        {{- end }}
        - mountPath: /etc/config/settings/adx
          name: ama-logs-adx-secret
          readOnly: true
       livenessProbe:
        exec:
         command:
         - /bin/bash
         - -c
         - "/opt/livenessprobe.sh"
        initialDelaySeconds: 60
        periodSeconds: 60
        timeoutSeconds: 15
   {{- if .Values.ama-logs.sidecarscraping }}
     - name: ama-logs-prometheus
       {{- if eq (.Values.ama-logs.domain | lower) "opinsights.azure.cn" }}
       image: "mcr.azk8s.cn/azuremonitor/containerinsights/ciprod:{{ .Values.ama-logs.image.tag }}"
       {{- else }}
       image: {{ printf "%s:%s" .Values.ama-logs.image.repo .Values.ama-logs.image.tag }}
       {{- end }}
       imagePullPolicy: IfNotPresent
       resources:
{{ toYaml .Values.ama-logs.resources.daemonsetlinuxsidecar | indent 9 }}
       env:
       {{- if ne .Values.ama-logs.env.clusterId "<your_cluster_id>" }}
       - name: AKS_RESOURCE_ID
         value: {{ .Values.ama-logs.env.clusterId | quote }}
       {{- if ne .Values.ama-logs.env.clusterRegion "<your_cluster_region>" }}
       - name: AKS_REGION
         value: {{ .Values.ama-logs.env.clusterRegion | quote }}
       {{- end }}
       {{- else if ne .Values.Azure.Cluster.ResourceId "<your_cluster_id>" }}
       - name: AKS_RESOURCE_ID
         value: {{ .Values.Azure.Cluster.ResourceId | quote }}
       - name: USING_AAD_MSI_AUTH
         value: {{ .Values.ama-logs.useAADAuth | quote }}
       {{- if ne .Values.Azure.Cluster.Region "<your_cluster_region>" }}
       - name: AKS_REGION
         value: {{ .Values.Azure.Cluster.Region | quote }}
       {{- end }}
       {{- else }}
       - name: ACS_RESOURCE_NAME
         value: {{ .Values.ama-logs.env.clusterName | quote }}
       {{- end }}
       - name: CONTROLLER_TYPE
         value: "DaemonSet"
       - name: CONTAINER_TYPE
         value: "PrometheusSidecar"
       - name: NODE_IP
         valueFrom:
            fieldRef:
              fieldPath: status.hostIP
       - name: ISTEST
         value: {{ .Values.ama-logs.ISTEST | quote }}
       securityContext:
         privileged: true
       volumeMounts:
         - mountPath: /etc/kubernetes/host
           name: azure-json-path
         - mountPath: /etc/ama-logs-secret
           name: ama-logs-secret
           readOnly: true
         {{- if and (.Values.Azure.proxySettings.isProxyEnabled) (.Values.Azure.proxySettings.proxyCert) }}
         - mountPath: /etc/ssl/certs/proxy-cert.crt
           subPath: PROXYCERT.crt
           name: ama-logs-secret
           readOnly: true
         {{- end }}
         - mountPath: /etc/config/settings
           name: settings-vol-config
           readOnly: true
         - mountPath: /etc/config/osm-settings
           name: osm-settings-vol-config
           readOnly: true
       livenessProbe:
         exec:
           command:
             - /bin/bash
             - -c
             - /opt/livenessprobe.sh
         initialDelaySeconds: 60
         periodSeconds: 60
         timeoutSeconds: 15
   {{- end }}
   {{- with .Values.ama-logs.daemonset.affinity }}
   affinity: {{- toYaml . | nindent 8 }}
   {{- end }}
   {{- with .Values.ama-logs.tolerations }}
   tolerations: {{- toYaml . | nindent 8 }}
   {{- end }}
   volumes:
    - name: host-root
      hostPath:
       path: /
    - name: docker-sock
      hostPath:
       path: /var/run
    - name: container-hostname
      hostPath:
       path: /etc/hostname
    - name: host-log
      hostPath:
       path: /var/log
    - name: containerlog-path
      hostPath:
       path: /var/lib/docker/containers
    - name: azure-json-path
      hostPath:
       path: /etc/kubernetes
    - name: ama-logs-secret
      secret:
       secretName: ama-logs-secret
    - name: settings-vol-config
      configMap:
        name: container-azm-ms-agentconfig
        optional: true
    {{- if .Values.ama-logs.logsettings.custommountpath }}
    - name: custom-mount-path
      hostPath:
       path: {{ .Values.ama-logs.logsettings.custommountpath }}
    {{- end }}
    - name: ama-logs-adx-secret
      secret:
       secretName: ama-logs-adx-secret
       optional: true
    - name: osm-settings-vol-config
      configMap:
        name: container-azm-ms-osmconfig
        optional: true
{{- end }}
