<?xml version="1.0" encoding="utf-8"?>
<MonitoringManagement version="1.0" namespace="TuxTest" eventVersion="1"
                      timestamp="2014-10-01T20:00:00.000">
  <!--
  If the value of the file attribute is not an absolute pathname, the path is assumed to
  be specified relative to the default mdsd configuration directory (/etc/mdsd.d/).
  
  As in the Windows MA configuration file, any attributes of the <MonitoringManagement>
  element within imported files are ignored.
  -->
  <Imports>
 
  </Imports>

  <!--
  Most of these forms assume that Azure Service Configuration Settings (ACS) are
  available, which appears to be untrue for Linux IaaS virtuals.
  -->
  <Accounts>
    <!-- <Account moniker="MySvcMDS" isDefault="true" autoKey="true" /> -->
<!--<Account moniker="MySvcMDS" isDefault="true" account="omstestvmdiag" tableEndpoint="https://omstestvmdiag.table.core.windows.net" key=""/>
  </Accounts>-->
  <!--<Account moniker="MySvcMDS" isDefault="true" account="dockerprovider" tableEndpoint="https://dockerprovider.table.core.windows.net" key=""/> -->
  </Accounts>

  <!--
  The Management element is similar to that supported by the Windows MA, but there's
  no ability to run arbitrary code. An IdentityComponent can be a fixed string, it can
  be the value of an environment variable, or it can be the hostname of the server
  where mdsd is running.
  
  As with the Windows MA, the first Management element encountered while loading config
  files will have take effect; all others are ignored.
  -->
  <Management eventVolume="Large" defaultRetentionInDays="90" >
    <Identity>
      <IdentityComponent name="Tenant">myTestTenant</IdentityComponent>      
      <IdentityComponent name="Host" useComputerName="true" />
    </Identity>
    <AgentResourceUsage diskQuotaInMB="50000" />
  </Management>

  <!--
  A <Schema> has a name, used to link it to one or more event sources, and contains a
  sequence of columns.
  
  Each column has a name, an augmented JSON source type, and a target MDS type.
  -->
  <Schemas>
    <Schema name="KubePodInventorySchema">
      <Column name="ClusterId" type="str" mdstype="mt:wstr" />
      <Column name="ClusterName" type="str" mdstype="mt:wstr" />
      <Column name="Computer" type="str" mdstype="mt:wstr" />
      <Column name="ContainerCreationTimeStamp" type="str" mdstype="mt:wstr" />
      <Column name="CollectionTime" type="str" mdstype="mt:wstr" />
      <Column name="ContainerID" type="str" mdstype="mt:wstr" />
      <Column name="ContainerLastStatus" type="str" mdstype="mt:wstr" />
      <Column name="ContainerName" type="str" mdstype="mt:wstr" />
      <Column name="ContainerRestartCount" type="str" mdstype="mt:wstr" />
      <Column name="ContainerStartTime" type="str" mdstype="mt:wstr" />
      <Column name="ContainerStatus" type="str" mdstype="mt:wstr" />
      <Column name="ContainerStatusReason" type="str" mdstype="mt:wstr" />
      <Column name="ControllerKind" type="str" mdstype="mt:wstr" />
      <Column name="ControllerName" type="str" mdstype="mt:wstr" />
      <Column name="InstanceName" type="str" mdstype="mt:wstr" />
      <Column name="Name" type="str" mdstype="mt:wstr" />
      <Column name="Namespace" type="str" mdstype="mt:wstr" />
      <Column name="PodCreationTimeStamp" type="str" mdstype="mt:wstr" />
      <Column name="PodIp" type="str" mdstype="mt:wstr" />
      <Column name="PodLabel" type="str" mdstype="mt:wstr" />
      <Column name="PodRestartCount" type="str" mdstype="mt:wstr" />
      <Column name="PodStartTime" type="str" mdstype="mt:wstr" />
      <Column name="PodStatus" type="str" mdstype="mt:wstr" />
      <Column name="PodUid" type="str" mdstype="mt:wstr" />
      <Column name="ServiceName" type="str" mdstype="mt:wstr" />
    </Schema>
    <Schema name="KubeServicesSchema">
      <Column name="ClusterId" type="str" mdstype="mt:wstr" />
      <Column name="ClusterIp" type="str" mdstype="mt:wstr" />
      <Column name="ClusterName" type="str" mdstype="mt:wstr" />
      <Column name="CollectionTime" type="str" mdstype="mt:wstr" />
      <Column name="Namespace" type="str" mdstype="mt:wstr" />
      <Column name="SelectorLabels" type="str" mdstype="mt:wstr" />
      <Column name="ServiceName" type="str" mdstype="mt:wstr" />
      <Column name="ServiceType" type="str" mdstype="mt:wstr" />
    </Schema>
    <Schema name="KubePerfSchema">
      <Column name="Computer" type="str" mdstype="mt:wstr" />
      <Column name="ObjectName" type="str" mdstype="mt:wstr" />
      <Column name="CounterName" type="str" mdstype="mt:wstr" />
      <Column name="InstanceName" type="str" mdstype="mt:wstr" />
      <Column name="TimeGenerated" type="str" mdstype="mt:wstr" />
      <Column name="CounterValue" type="str" mdstype="mt:wstr" />      
    </Schema>
  </Schemas>

  <Sources>
    <Source name="oms.containerinsights.KubePodInventory" schema="KubePodInventorySchema" />
    <Source name="oms.containerinsights.KubeServices" schema="KubeServicesSchema" />   
    <Source name="oms.api.KubePerf" schema="KubePerfSchema" />
  </Sources>
  
  <!--
  All events are specified within Events elements. Multiple events can specify the same
  eventName; that will cause the corresponding rows to be written to the same table.
  -->
  <Events>
    <!--
    MdsdEvents are sent by event providers directly to mdsd via loopback socket.
    
    Each event has a source; a single provider can send events from multiple sources, and
    multiple providers can each send events from the same source.
    
    All events from a single source conform to the same schema, specified in a Schemas
    element; the association between schema and source is made in a Sources element.
    
    Each MdsdEvent element contains routings for events from a single source.
    
    Each RouteEvent directs a set (or subset) of events to a destination table
    (identified by eventName). If no Filter elements are specified, all events from the
    source are added to the destination table; otherwise, the event is added only if all
    Filters evaluate as true. If multiple RouteEvents using the same eventName match
    (i.e. their Filters all evaluate as true), the event will be added to the table only
    once.
    
    The upload frequency for a destination table is that of the highest priority event
    routed to that table. Routing a high priority event to a table can cause normal
    priority events to be delivered sooner than the next five-minute interval.
    -->
    <MdsdEvents>
    <MdsdEventSource source="oms.containerinsights.KubePodInventory" queryDelay="PT10S">
        <RouteEvent eventName="KubePodInventoryEvent" duration="PT10S" priority="High" storeType="Local">          
        </RouteEvent>
    </MdsdEventSource>
    <MdsdEventSource source="oms.containerinsights.KubeServices" queryDelay="PT10S">
        <RouteEvent eventName="KubeServicesEvent" duration="PT10S" priority="High" storeType="Local">          
        </RouteEvent>
    </MdsdEventSource>
    <MdsdEventSource source="oms.api.KubePerf" queryDelay="PT10S">
      <RouteEvent eventName="KubePerfEvent" duration="PT10S" priority="High" storeType="Local">          
      </RouteEvent>
    </MdsdEventSource>
    </MdsdEvents>
  </Events>

  <EventStreamingAnnotations>
    <EventStreamingAnnotation name="KubePodInventoryEvent">
       <OMS>
         <Content>
           <![CDATA[<Config workspaceName="CIWORKSPACE" logType="KUBE_POD_INVENTORY_BLOB" ipName="ContainerInsights"/>]]>
         </Content>
       </OMS>
    </EventStreamingAnnotation>
    <EventStreamingAnnotation name="KubeServicesEvent">
       <OMS>
         <Content>
           <![CDATA[<Config workspaceName="CIWORKSPACE" logType="KUBE_SERVICES_BLOB" ipName="ContainerInsights"/>]]>
         </Content>
       </OMS>
    </EventStreamingAnnotation>
    <EventStreamingAnnotation name="KubePerfEvent">
       <OMS>
         <Content>
           <![CDATA[<Config workspaceName="CIWORKSPACE" logType="LINUX_PERF_BLOB" ipName="LogManagement"/>]]>
         </Content>
       </OMS>
    </EventStreamingAnnotation>  
  </EventStreamingAnnotations>
</MonitoringManagement>